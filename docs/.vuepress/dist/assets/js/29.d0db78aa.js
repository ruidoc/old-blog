(window.webpackJsonp=window.webpackJsonp||[]).push([[29],{386:function(s,a,t){"use strict";t.r(a);var e=t(44),r=Object(e.a)({},(function(){var s=this,a=s.$createElement,t=s._self._c||a;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("h2",{attrs:{id:"ssh-免密登录"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#ssh-免密登录"}},[s._v("#")]),s._v(" ssh 免密登录")]),s._v(" "),t("p",[s._v("之前在做持续部署的时候，需要做 ssh 免密登录，记一下以免忘记。")]),s._v(" "),t("p",[s._v("首先，免密登录的大致原理，就是在客户端 "),t("code",[s._v("client")]),s._v(" 生成一对密钥（包括公钥和私钥），然后将公钥传到服务器 "),t("code",[s._v("server")]),s._v("。当 client 通过 ssh 登录 server 时，不用再输入密码就能直接登进去，这就是 ssh 免密登录。")]),s._v(" "),t("h3",{attrs:{id:"client-操作"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#client-操作"}},[s._v("#")]),s._v(" client 操作")]),s._v(" "),t("p",[s._v("在客户端，生成密钥方式如下：")]),s._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("ssh-keygen -t rsa\n")])])]),t("p",[s._v("然后, "),t("code",[s._v("cd ~/.ssh")]),s._v(" ，会看到两个文件：")]),s._v(" "),t("ul",[t("li",[s._v("id_rsa（私钥）")]),s._v(" "),t("li",[s._v("id_rsa.pub（公钥）")])]),s._v(" "),t("p",[s._v("~/.ssh 就是生成密钥的目录。")]),s._v(" "),t("p",[s._v("然后复制 id_rsa.pub 的内容，准备放到 server。")]),s._v(" "),t("h3",{attrs:{id:"server-操作"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#server-操作"}},[s._v("#")]),s._v(" server 操作")]),s._v(" "),t("p",[s._v("登录 server 后，同样进到 ~/.ssh 目录，看看有没有 "),t("code",[s._v("authorized_keys")]),s._v(" 这个文件")]),s._v(" "),t("p",[s._v("如果没有，新建一个，必须是这个名字。然后随便建一个文件 pub_cp，把上一部拷贝的公钥内容放进去，保存")]),s._v(" "),t("p",[s._v("接下来执行：")]),s._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("cat")]),s._v(" ./pub_cp "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">>")]),s._v(" ./authorized_keys\n")])])]),t("p",[s._v("这一步是把 pub_cp 的内容追加到 authorized_keys 的末尾。为什么这么做呢？因为 当不同的客户端配免密登录的时候，authorized_keys 里可能会存多个公钥，所以新的公钥要追加而不是覆盖。")]),s._v(" "),t("p",[s._v("这样就搞定了。")]),s._v(" "),t("h4",{attrs:{id:"注意事项"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#注意事项"}},[s._v("#")]),s._v(" 注意事项")]),s._v(" "),t("p",[s._v("生成的这对公私钥，是可以在多个项目复用的，不必为每个项目都生成一对。")]),s._v(" "),t("p",[s._v("但是如果有的项目对生成方式有要求，那么就应该单独生成一套。")]),s._v(" "),t("h3",{attrs:{id:"ssh-deploy"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#ssh-deploy"}},[s._v("#")]),s._v(" ssh-deploy")]),s._v(" "),t("p",[s._v("基于 GitHub Action 的自动部署到私有服务器，需要配置 ssh，用于免密传输生成的文件。")]),s._v(" "),t("p",[s._v("action 地址：https://github.com/easingthemes/ssh-deploy")]),s._v(" "),t("p",[s._v("这个 action 需要生成 PEM 格式的公私钥，方式如下：")]),s._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[s._v("ssh-keygen -m PEM -t rsa -b "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("4096")]),s._v("\n")])])]),t("p",[s._v("生成的这对私钥用于在容器环境，上传文件到私有服务器，所以生成的时候不必覆盖我们电脑本地的私钥")]),s._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[s._v("Enter "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("file")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("in")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("which")]),s._v(" to save the key "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("/Users/yangrui/.ssh/id_rsa"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(": ./my_rsa\n")])])]),t("p",[s._v("这样生成了 "),t("code",[s._v("my_rsa")]),s._v(" 和 "),t("code",[s._v("my_rsa.pub")]),s._v("，复制使用就好。")])])}),[],!1,null,null,null);a.default=r.exports}}]);