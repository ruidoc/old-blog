(window.webpackJsonp=window.webpackJsonp||[]).push([[10],{364:function(s,t,a){"use strict";a.r(t);var e=a(44),v=Object(e.a)({},(function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h2",{attrs:{id:"记录文件更新"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#记录文件更新"}},[s._v("#")]),s._v(" 记录文件更新")]),s._v(" "),a("p",[s._v("每当完成一部分编码，想要记录下来时，就将它提交到到仓库。")]),s._v(" "),a("p",[s._v("工作目录下的每一个文件都不外乎这两种状态："),a("strong",[s._v("已跟踪")]),s._v(" 或 "),a("strong",[s._v("未跟踪")]),s._v("。")]),s._v(" "),a("p",[s._v("已跟踪，是通过 "),a("code",[s._v("git add")]),s._v(" 命令加入暂存区的文件。它们的状态可能是未修改，已修改。未加入暂存区就是未跟踪。")]),s._v(" "),a("h3",{attrs:{id:"检查文件状态"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#检查文件状态"}},[s._v("#")]),s._v(" 检查文件状态")]),s._v(" "),a("p",[s._v("使用 "),a("code",[s._v("git status")]),s._v(" 命令查看哪些文件处于什么状态。")]),s._v(" "),a("p",[s._v("刚克隆的仓库执行此命令，会看到如下状态：")]),s._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[s._v("$ "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" status\nOn branch master  "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 当前分支")]),s._v("\nYour branch is up-to-date with "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'origin/master'")]),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(".")]),s._v("\nnothing to commit, working directory clean\n")])])]),a("p",[s._v("这里显示的信息有：")]),s._v(" "),a("ul",[a("li",[s._v("当前分支是哪个")]),s._v(" "),a("li",[s._v("当前本地分支与远程分支是否偏离")]),s._v(" "),a("li",[s._v("跟踪与未跟踪的文件状态")])]),s._v(" "),a("p",[s._v("如果只是想看文件的状态，可以用简短模式：")]),s._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[s._v("$ "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" status -s\n")])])]),a("p",[s._v("显示结果是这样：")]),s._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[s._v("A  lib/git.rb       "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Add")]),s._v("\nM  lib/simplegit.rb "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Modify")]),s._v("\n?? LICENSE.txt      "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Untracked")]),s._v("\n")])])]),a("h3",{attrs:{id:"跟踪文件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#跟踪文件"}},[s._v("#")]),s._v(" 跟踪文件")]),s._v(" "),a("p",[s._v("使用 "),a("code",[s._v("git add")]),s._v(" 命令开始跟踪一个文件。")]),s._v(" "),a("p",[s._v("git add 命令使用文件或目录作为参数；如果参数是目录，则递归跟踪该目录下的所有文件")]),s._v(" "),a("p",[s._v("参数为 "),a("code",[s._v(".")]),s._v(" 是跟踪所有已修改文件。")]),s._v(" "),a("p",[s._v("git add 是个多功能命令：")]),s._v(" "),a("ul",[a("li",[s._v("可以跟踪新文件")]),s._v(" "),a("li",[s._v("已跟踪的文件放到暂存区")]),s._v(" "),a("li",[s._v("合并时把有冲突的文件标记为已解决状态")])]),s._v(" "),a("h3",{attrs:{id:"查看已暂存和未暂存的修改"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#查看已暂存和未暂存的修改"}},[s._v("#")]),s._v(" 查看已暂存和未暂存的修改")]),s._v(" "),a("p",[s._v("查看 "),a("strong",[s._v("已跟踪，未暂存")]),s._v(" 的文件更新了哪些部分，直接输入：")]),s._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("diff")]),s._v("\n")])])]),a("p",[s._v("查看 "),a("strong",[s._v("已暂存，未提交")]),s._v(" 的文件更新了哪些部分，输入：")]),s._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("diff")]),s._v(" --staged\n")])])]),a("h3",{attrs:{id:"跳过使用暂存区域"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#跳过使用暂存区域"}},[s._v("#")]),s._v(" 跳过使用暂存区域")]),s._v(" "),a("p",[s._v("提交文件，需要先暂存再提交，要走两步：")]),s._v(" "),a("ol",[a("li",[a("code",[s._v("git add .")])]),s._v(" "),a("li",[a("code",[s._v("git commit -m 'my desc'")])])]),s._v(" "),a("p",[s._v("每次提交文件走两步，略显繁琐。其实这两个命令可以合成一个：")]),s._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" commit -a -m "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'my desc'")]),s._v("\n")])])]),a("h3",{attrs:{id:"移除文件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#移除文件"}},[s._v("#")]),s._v(" 移除文件")]),s._v(" "),a("p",[s._v("从 Git 中移除某个文件，也就是从暂存区域移除，解除跟踪。")]),s._v(" "),a("p",[s._v("两种情况。")]),s._v(" "),a("p",[s._v("第一种：我们想把文件同时从 Git 仓库和项目目录中删除：")]),s._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("rm")]),s._v(" -f test.md\n")])])]),a("p",[s._v("第二种：我们只想把文件同时从 Git 仓库中删除，在项目目录中保存。")]),s._v(" "),a("p",[s._v("最常见的情况是，忘记添加 .gitignore 文件，不小心把 node_modules 目录添加到暂存区了。此时应该这样做：")]),s._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("rm")]),s._v(" --cached node_modules\n")])])]),a("h3",{attrs:{id:"移动文件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#移动文件"}},[s._v("#")]),s._v(" 移动文件")]),s._v(" "),a("p",[s._v("Git 并不显式跟踪文件移动操作。当要重命名某个文件时，可以这么做：")]),s._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("mv")]),s._v(" file_from file_to\n")])])]),a("p",[s._v("其实，运行 git mv 就相当于运行了下面三条命令：")]),s._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("mv")]),s._v(" file_from file_to\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("rm")]),s._v(" file_from\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("add")]),s._v(" file_to\n")])])]),a("p",[s._v("当然，在 vscode 编辑器中，直接重命名文件也会达到这个效果。")]),s._v(" "),a("p",[a("strong",[s._v("注意")]),s._v("：当重命名只改了一个字母的大小写时，必须用 "),a("code",[s._v("git mv")]),s._v(" 命令才能达到效果。")])])}),[],!1,null,null,null);t.default=v.exports}}]);