(window.webpackJsonp=window.webpackJsonp||[]).push([[47],{402:function(t,a,s){"use strict";s.r(a);var n=s(44),e=Object(n.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h2",{attrs:{id:"内存管理机制"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#内存管理机制"}},[t._v("#")]),t._v(" 内存管理机制")]),t._v(" "),s("p",[t._v("js 内存管理的知识，主要从三个方面来看。")]),t._v(" "),s("ol",[s("li",[t._v("内存分类")]),t._v(" "),s("li",[t._v("垃圾回收机制")]),t._v(" "),s("li",[t._v("内存泄漏相关")])]),t._v(" "),s("h3",{attrs:{id:"内存生命周期"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#内存生命周期"}},[t._v("#")]),t._v(" 内存生命周期")]),t._v(" "),s("p",[t._v("内存管理是每种编程语言的基本能力，区别是有的语言会开放 api，有的语言则不会，比如 js。js 是通过自己的"),s("code",[t._v("垃圾回收机制")]),t._v("自动管理内存的")]),t._v(" "),s("h3",{attrs:{id:"三个阶段"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#三个阶段"}},[t._v("#")]),t._v(" 三个阶段")]),t._v(" "),s("p",[s("img",{attrs:{src:"assets/7905A111-40DA-4E43-9187-EF84A70D8F19.png",alt:"image"}})]),t._v(" "),s("ol",[s("li",[t._v("挖坑 — 分配内存")]),t._v(" "),s("li",[t._v("用坑 - 内存的读与写")]),t._v(" "),s("li",[t._v("还坑 = 内存释放")])]),t._v(" "),s("p",[t._v("“坑” 也是不同的，分两种，下面介绍 👇")]),t._v(" "),s("h3",{attrs:{id:"栈内存与堆内存"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#栈内存与堆内存"}},[t._v("#")]),t._v(" 栈内存与堆内存")]),t._v(" "),s("p",[t._v("JS 中的数据类型有两类："),s("code",[t._v("基本类型")]),t._v("和"),s("code",[t._v("引用类型")]),t._v("。")]),t._v(" "),s("p",[t._v("基本类型包括：String、Number、Boolean、null、undefined、Symbol，存储于栈内存")]),t._v(" "),s("p",[t._v("引用类型包括：Object、Array、Function，Date，存储于堆内存")]),t._v(" "),s("blockquote",[s("p",[t._v("堆和栈分别是不同的数据结构。栈是线性表的一种，而堆则是树形结构。")])]),t._v(" "),s("p",[s("img",{attrs:{src:"assets/8B9A8B0F-F2BC-47A8-B67E-5AB497D56553.png",alt:"image"}})]),t._v(" "),s("p",[t._v("在访问 a、b、c 三个变量时，从栈中直接获取该变量的值；")]),t._v(" "),s("p",[t._v("访问 d 和 e 时，需要分两步走：")]),t._v(" "),s("ul",[s("li",[t._v("从栈中获取变量对应值的引用（堆内存中的地址）")]),t._v(" "),s("li",[t._v("用上一步获取到的引用，再去堆内存找到数据")])]),t._v(" "),s("h2",{attrs:{id:"垃圾回收机制"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#垃圾回收机制"}},[t._v("#")]),t._v(" 垃圾回收机制")]),t._v(" "),s("p",[t._v("垃圾回收是指，当一个变量不再被需要之后，自动释放掉所占用的内存空间")]),t._v(" "),s("p",[t._v("判断依据 - 垃圾回收算法！")]),t._v(" "),s("p",[t._v("下面介绍两种算法 👇")]),t._v(" "),s("h3",{attrs:{id:"引用计数法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#引用计数法"}},[t._v("#")]),t._v(" 引用计数法")]),t._v(" "),s("p",[t._v("引用：一个对象如果有权访问另一个对象（隐式或者显式），就叫做引用另一个对象。例如，一个 Javascript 对象具有对它原型的引用（隐式引用）和对它属性的引用（显式引用）")]),t._v(" "),s("blockquote",[s("p",[t._v("谁能访问，谁引用")])]),t._v(" "),s("p",[t._v("声明一个变量等于创建一个引用。")]),t._v(" "),s("p",[t._v("给对象中添加一个引用计数器，每当有一个地方引用它时，计数器的值就加 1；当引用失效时，计数器值就减 1；")]),t._v(" "),s("p",[s("strong",[t._v("当引用为 0 时，变量所占用的内存空间会被释放掉；")])]),t._v(" "),s("h4",{attrs:{id:"循环引用"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#循环引用"}},[t._v("#")]),t._v(" 循环引用")]),t._v(" "),s("p",[t._v("引用计数法已被现代浏览器淘汰，原因之一是在循环引用下，引用永远无法为 0，内存不会释放，容易造成"),s("code",[t._v("内存泄漏")])]),t._v(" "),s("p",[s("img",{attrs:{src:"assets/CE6E7D3B-E3C5-4535-B19C-F977100FEF75.png",alt:"image"}})]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" cycleObj1 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" cycleObj2 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\ncycleObj1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("target "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" cycleObj2"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\ncycleObj2"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("target "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" cycleObj1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("h3",{attrs:{id:"标记清除法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#标记清除法"}},[t._v("#")]),t._v(" 标记清除法")]),t._v(" "),s("p",[t._v("该算法的判断标准，是变量"),s("code",[t._v("是否可抵达")]),t._v("！")]),t._v(" "),s("p",[t._v("两个阶段：")]),t._v(" "),s("ul",[s("li",[t._v("标记阶段：从根对象（Window 或 Global）开始扫描，可用变量标记为"),s("code",[t._v("可抵达")])]),t._v(" "),s("li",[t._v("清除阶段：发现没有被标记为 “可抵达” 的变量，一键清除")])]),t._v(" "),s("h2",{attrs:{id:"闭包与内存泄漏"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#闭包与内存泄漏"}},[t._v("#")]),t._v(" 闭包与内存泄漏")]),t._v(" "),s("p",[t._v("内存泄漏：不使用的变量（内存垃圾）没有被释放，导致内存占用攀升")]),t._v(" "),s("h3",{attrs:{id:"内存泄漏成因"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#内存泄漏成因"}},[t._v("#")]),t._v(" 内存泄漏成因")]),t._v(" "),s("h4",{attrs:{id:"_1-全局变量"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-全局变量"}},[t._v("#")]),t._v(" 1. 全局变量")]),t._v(" "),s("p",[t._v("非严格模式下，me 而非 var me 这种写法，会使 me 挂载到全局")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("test")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  me "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"xiuyan"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h4",{attrs:{id:"_2-计-延-时器"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-计-延-时器"}},[t._v("#")]),t._v(" 2. 计（延）时器")]),t._v(" "),s("p",[t._v("setInterval 和 setTimeout 链式调用，未清除的话，会导致内存泄漏")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("setInterval")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 函数体")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1000")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("setTimeout")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 函数体")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("setTimeout")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("arguments"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("callee"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1000")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1000")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])])])}),[],!1,null,null,null);a.default=e.exports}}]);