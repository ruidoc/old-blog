(window.webpackJsonp=window.webpackJsonp||[]).push([[74],{431:function(t,v,e){"use strict";e.r(v);var a=e(44),_=Object(a.a)({},(function(){var t=this,v=t.$createElement,e=t._self._c||v;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h2",{attrs:{id:"vue-零散知识"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#vue-零散知识"}},[t._v("#")]),t._v(" Vue 零散知识")]),t._v(" "),e("p",[t._v("Vue 知识零散，这里只说 “频率高”、“区分度高” 的几块。")]),t._v(" "),e("h3",{attrs:{id:"生命周期"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#生命周期"}},[t._v("#")]),t._v(" 生命周期")]),t._v(" "),e("p",[t._v("先附上官方图：")]),t._v(" "),e("p",[e("img",{attrs:{src:"/assets/WechatIMG250.jpeg",alt:"WechatIMG250"}})]),t._v(" "),e("p",[t._v("再附修言大神总结图：")]),t._v(" "),e("p",[e("img",{attrs:{src:"/assets/WechatIMG251.jpeg",alt:"WechatIMG251"}})]),t._v(" "),e("p",[t._v("其中常用的就是：created 中请求数据，mounted 中挂载数据。")]),t._v(" "),e("h3",{attrs:{id:"keep-alive-与生命周期"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#keep-alive-与生命周期"}},[t._v("#")]),t._v(" keep-alive 与生命周期")]),t._v(" "),e("p",[t._v("keep-alive 是一个内置组件，当它包裹在组件外时，会将组件缓存到内存中，防止组件重复渲染。")]),t._v(" "),e("p",[t._v("阻止了重新渲染，那么生命周期必然有变化：")]),t._v(" "),e("ul",[e("li",[t._v("多出 "),e("strong",[t._v("deactivated、actived")]),t._v(" 两个生命周期")]),t._v(" "),e("li",[t._v("beforeDestroy 和 destroyed 不会被触发")])]),t._v(" "),e("p",[t._v("当组件跳转时，触发 deactivated；当组件被切回来时，触发 actived。")]),t._v(" "),e("h3",{attrs:{id:"路由模式"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#路由模式"}},[t._v("#")]),t._v(" 路由模式")]),t._v(" "),e("p",[t._v("路由使用 vue-router 实现，有三种模式：hash、history 和 abstract：")]),t._v(" "),e("ul",[e("li",[t._v("hash：使用 URL hash 值来作路由。支持所有浏览器；")]),t._v(" "),e("li",[t._v("history：需要 HTML5 History API 和服务器配置结合。对浏览器版本有要求，不支持低版本浏览器；")]),t._v(" "),e("li",[t._v("abstract：支持所有 JavaScript 运行环境。如果当前环境没有浏览器 API，路由会自动进入这个模式.")])]),t._v(" "),e("p",[t._v("这几种模式不是 Vue 专属，而是前端路由的通用解决方案。")]),t._v(" "),e("p",[t._v("想了解更多，请看 "),e("RouterLink",{attrs:{to:"/points/前端路由.html"}},[t._v("前端路由")])],1),t._v(" "),e("h3",{attrs:{id:"说说你对-mvvm-的理解"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#说说你对-mvvm-的理解"}},[t._v("#")]),t._v(" 说说你对 MVVM 的理解")]),t._v(" "),e("p",[t._v("MVVM 是一种架构模式。如图是 Vue 的架构：")]),t._v(" "),e("p",[e("img",{attrs:{src:"/assets/WechatIMG252.jpeg",alt:"WechatIMG252"}})]),t._v(" "),e("p",[t._v("这三个角色大家要认清楚：")]),t._v(" "),e("ul",[e("li",[t._v("View 层：视图层，对应到 "),e("code",[t._v("<template>")]),t._v(" 标签的内容。")]),t._v(" "),e("li",[t._v("VM 层：View-Model，对应到 Vue 实例。数据与视图双向绑定。")]),t._v(" "),e("li",[t._v("Model 层：模型层，其实就是数据层。data 数据或 Vuex 数据")])]),t._v(" "),e("p",[t._v("注意："),e("strong",[t._v("React 不是 MVVM 架构")]),t._v("，React 是一个单向数据流的库，状态驱动视图。")]),t._v(" "),e("p",[t._v("MVVM 区别于传统的 MVC。")]),t._v(" "),e("p",[t._v("区别的关键，就是 C（controller）和 VM（ViewModel）的区别。")]),t._v(" "),e("ol",[e("li",[e("strong",[t._v("VM：")]),t._v(" 模型视图。一是通过数据绑定，将模型数据映射到视图上；二是通过自定义事件，在视图操作中修改模型数据。核心是双向绑定。")]),t._v(" "),e("li",[e("strong",[t._v("C：")]),t._v(" 控制器。主要处理业务逻辑。负责从视图读取数据，控制用户输入，并向模型发送数据")])]),t._v(" "),e("p",[t._v("MVVM 模型的关键，在于View的变化会直接映射在 ViewModel 中（反之亦然），这个映射的过程不需要你手动实现，而是 MVVM 框架来帮你做掉。")])])}),[],!1,null,null,null);v.default=_.exports}}]);