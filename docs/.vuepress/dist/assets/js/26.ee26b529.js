(window.webpackJsonp=window.webpackJsonp||[]).push([[26],{380:function(t,s,r){"use strict";r.r(s);var n=r(44),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,r=t._self._c||s;return r("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[r("h2",{attrs:{id:"配置history路由"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#配置history路由"}},[t._v("#")]),t._v(" 配置history路由")]),t._v(" "),r("p",[t._v("单页面应用有两种路由模式： hash 模式和 history 模式。")]),t._v(" "),r("p",[t._v("hash 模式通用性好，不依赖服务器配置，但是有 "),r("code",[t._v("#")]),t._v(" 符号总显得不够优雅。相比于 hash 模式来说，history 模式则更加美观。")]),t._v(" "),r("p",[t._v("但是，history 模式也会有问题。当页面刷新时，nginx 会将前端路由认为是文件目录，因此会出现 404 的错误。解决这个问题，就要nginx配置解析路径。")]),t._v(" "),r("p",[t._v("解析原理：对于找不到的 url，直接指向首页的 index.html，去执行 js 走前端路由。")])])}),[],!1,null,null,null);s.default=e.exports}}]);