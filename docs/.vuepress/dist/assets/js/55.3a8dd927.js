(window.webpackJsonp=window.webpackJsonp||[]).push([[55],{410:function(t,s,n){"use strict";n.r(s);var a=n(44),e=Object(a.a)({},(function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("h2",{attrs:{id:"js-运算符"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#js-运算符"}},[t._v("#")]),t._v(" js 运算符")]),t._v(" "),n("p",[t._v("总结一下运算符")]),t._v(" "),n("h3",{attrs:{id:"n-与-n"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#n-与-n"}},[t._v("#")]),t._v(" n++ 与 ++n")]),t._v(" "),n("p",[n("code",[t._v("n++")]),t._v(" 与 "),n("code",[t._v("++n")]),t._v(" 的计算效果一样，都是在 n 的基础上 "),n("strong",[t._v("+1")])]),t._v(" "),n("p",[t._v("区别是：n++ 返回旧值，++n 返回新值。")]),t._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" n "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" n_one "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" n"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" n_two "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),t._v("n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nconsole"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" n_one"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 2, 1")]),t._v("\nconsole"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" n_two"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 2, 2")]),t._v("\n")])])]),n("p",[t._v("上面例子中，不管 "),n("code",[t._v("n++")]),t._v(" 还是 "),n("code",[t._v("++n")]),t._v("，首先 n 会自增，区别只是执行后的返回结果不同。")])])}),[],!1,null,null,null);s.default=e.exports}}]);