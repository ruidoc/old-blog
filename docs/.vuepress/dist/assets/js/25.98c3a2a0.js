(window.webpackJsonp=window.webpackJsonp||[]).push([[25],{383:function(t,a,n){"use strict";n.r(a);var s=n(44),o=Object(s.a)({},(function(){var t=this,a=t.$createElement,n=t._self._c||a;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("h2",{attrs:{id:"location-配置"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#location-配置"}},[t._v("#")]),t._v(" location 配置")]),t._v(" "),n("p",[t._v("location 是对服务器路由解析规则的配置。")]),t._v(" "),n("h3",{attrs:{id:"location表达式类型"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#location表达式类型"}},[t._v("#")]),t._v(" location表达式类型")]),t._v(" "),n("p",[t._v('~ 表示执行一个正则匹配，区分大小写\n~* 表示执行一个正则匹配，不区分大小写\n^~ 表示普通字符匹配。使用前缀匹配。如果匹配成功，则不再匹配其他location。\n= 进行普通字符精确匹配。也就是完全匹配。\n@ "@" 定义一个命名的 location，使用在内部定向时，例如 error_page, try_files')]),t._v(" "),n("h3",{attrs:{id:"location优先级说明"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#location优先级说明"}},[t._v("#")]),t._v(" location优先级说明")]),t._v(" "),n("p",[t._v("以下是按优先级排列说明：\n第一优先级：等号类型（=）的优先级最高。一旦匹配成功，则不再查找其他匹配项。\n第二优先级：^~类型表达式。一旦匹配成功，则不再查找其他匹配项。\n第三优先级：正则表达式类型（~ ~*）的优先级次之。如果有多个location的正则能匹配的话，则使用正则表达式最长的那个。\n第四优先级：常规字符串匹配类型。按前缀匹配。")]),t._v(" "),n("h3",{attrs:{id:"location优先级配置项如下"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#location优先级配置项如下"}},[t._v("#")]),t._v(" location优先级配置项如下:")]),t._v(" "),n("div",{staticClass:"language-nginx extra-class"},[n("pre",{pre:!0,attrs:{class:"language-nginx"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("location")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 仅仅匹配请求 /")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v(" configuration A "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("location")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 匹配所有以 / 开头的请求。")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v(" configuration B "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("location")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("documents"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 匹配所有以 /documents/ 开头的请求。")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v(" configuration C "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("location")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("^")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("~")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("images"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 匹配所有以 /images/ 开头的表达式")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v(" configuration D "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("location")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("~")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" \\"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("gif"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("jpg"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("jpeg"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("$ "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 匹配所有以 gif jpg jpeg结尾的请求")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v(" configuration E "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])])}),[],!1,null,null,null);a.default=o.exports}}]);